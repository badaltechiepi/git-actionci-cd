name: Demo Push
on:   
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - main
env:
  IMAGE_NAME: springpet
jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  Build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - uses: actions/checkout@v3
      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"
      - name: Log in to registry
        # This is where you will update the PAT to GITHUB_TOKEN
        run: echo "${{ secrets.GIT_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GIT_USER }} --password-stdin
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME:${GITHUB_SHA}
          # Change all uppercase to lowercase
          # IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          # VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          # [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          #  [ "$VERSION" == "master" ] && VERSION=latest
          # echo IMAGE_ID=$IMAGE_ID
          # echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID
          docker push $IMAGE_ID
  Deployement:
    needs: Build
    runs-on: ubuntu-latest
    steps:
    - name: Log in to registry
        # This is where you will update the PAT to GITHUB_TOKEN
      run: echo "${{ secrets.GIT_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GIT_USER }} --password-stdin
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: us-east-2
    - name: Deploy image to Amazon EKS
      run: |
          aws sts get-caller-identity
          aws eks --region us-east-2 update-kubeconfig --name my-cluster1
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
          helm version
          git clone https://github.com/badaltechiepi/git-actionci-cd.git && cd git-actionci-cd
          ls -al
          echo "${{ secrets.GIT_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GIT_USER }} --password-stdin
          docker pull ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${GITHUB_SHA}
          helm install springpet --set image.repository=ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${GITHUB_SHA} springhelm/.
      
